{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\sign-login-page\\\\frontend\\\\src\\\\components\\\\Logins.jsx\",\n  _s = $RefreshSig$();\nimport useFormik from \"formik\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  email: '',\n  password: ''\n};\nconst validationSchema = values => {\n  const errors = {};\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"invalid email address\";\n  }\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n  return errors;\n};\nfunction Logins() {\n  _s();\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        placeholder: \"PLease enter your email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        id: \"email\",\n        onChange: formik.handleChange,\n        value: formik.values.eamil,\n        onBlur: formik.handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), formik.touched.eamil && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 57\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        placeholder: \"enter your password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        id: \"password\",\n        onChange: formik.handleChange,\n        value: formik.values.password,\n        onBlur: formik.handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 63\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Logins, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = Logins;\nexport default Logins;\nvar _c;\n$RefreshReg$(_c, \"Logins\");","map":{"version":3,"names":["useFormik","React","jsxDEV","_jsxDEV","initialValues","email","password","validationSchema","values","errors","test","Logins","_s","formik","onSubmit","handleSubmit","children","htmlFor","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","onChange","handleChange","value","eamil","onBlur","handleBlur","touched","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/sign-login-page/frontend/src/components/Logins.jsx"],"sourcesContent":["import useFormik from \"formik\";\r\nimport React from \"react\";\r\n\r\nconst initialValues={\r\n       email:'',\r\n       password:'',\r\n}\r\nconst validationSchema=values=>{\r\n    const errors={};\r\n    if(!values.email){\r\n      errors.email=\"Required\";\r\n    }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\r\n        errors.email=\"invalid email address\";\r\n    }\r\n\r\n    if(!values.password){\r\n       errors.password=\"Required\";\r\n    }\r\n\r\n    return errors;\r\n}\r\nfunction Logins(){\r\n\r\n    const formik=useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n        <div>\r\n        <label htmlFor=\"email\" placeholder=\"PLease enter your email\">Email</label>\r\n        <input \r\n        type=\"text\" \r\n        name=\"email\" \r\n        id=\"email\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.eamil}\r\n        onBlur={formik.handleBlur}\r\n        />\r\n        {formik.touched.eamil && formik.errors.email ? (<div>{formik.errors.email}</div>):null}\r\n        </div>\r\n\r\n        <div>\r\n        <label htmlFor=\"password\" placeholder=\"enter your password\">Password</label>\r\n        <input \r\n        type=\"text\" \r\n        name=\"password\" \r\n        id=\"password\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.password}\r\n        onBlur={formik.handleBlur}\r\n        />\r\n        {formik.touched.password && formik.errors.password ? (<div>{formik.errors.password}</div>):null}\r\n        </div>\r\n\r\n        <button type=\"submit\"></button>\r\n        </form>\r\n    )\r\n}\r\nexport default Logins;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}